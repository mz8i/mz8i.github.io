{"version":3,"sources":["cistercian/CistercianDigit.tsx","cistercian/CistercianDigitPositioned.tsx","cistercian/CistercianNumber.tsx","NumberChangeButton.tsx","useQueryString.ts","App.tsx","index.tsx"],"names":["baseFragments","digitFragments","0","1","2","3","4","5","6","7","8","9","CistercianDigit","digit","highlight","activeFragments","undefined","Error","isOn","lookup","Object","assign","map","f","getActiveFragmentsLookup","className","x1","y1","x2","y2","CistercianDigitPositioned","position","rest","scaleX","scaleY","width","height","viewBox","overflow","transform","transform-origin","CistercianNumber","number","highlightedPosition","React","num","toString","padStart","split","n","parseInt","getDigits","thousands","hundreds","tens","units","xmlns","NumberChangeButton","change","minNumber","maxNumber","onChangeNumber","onMouseOver","onMouseOut","afterChange","active","disabled","onClick","e","setQueryStringWithoutPageReload","qsValue","newurl","window","location","protocol","host","pathname","history","replaceState","path","useQueryString","key","initialValue","fromString","queryValue","queryString","search","qs","parse","ignoreQueryPrefix","parseArrays","getQueryStringValue","parsedQueryValue","useState","value","setValue","queryStringCallback","useThrottleCallback","values","newQsValue","stringify","setQueryStringValue","useEffect","App","positionHighlight","setPositionHighlight","Date","getFullYear","x","setNumber","textNumber","setTextNumber","replace","btnProps","type","pattern","maxLength","onChange","input","target","onBlur","min","max","step","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.334a79a2.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Digit } from '../types';\n\nexport interface CistercianDigitProps {\n    digit: Digit;\n    highlight?: boolean;\n}\n\nconst baseFragments = [1, 2, 3, 4, 6] as const;\ntype BaseFragment = typeof baseFragments[number];\n\nconst digitFragments: {[K in Digit]: BaseFragment[] } = {\n    0: [],\n    1: [1],\n    2: [2],\n    3: [3],\n    4: [4],\n    5: [1, 4],\n    6: [6],\n    7: [1, 6],\n    8: [2, 6],\n    9: [1, 2, 6]\n};\n\nfunction getActiveFragmentsLookup(activeFragments: Digit[]) {\n    const lookup = Object.assign({}, ...baseFragments.map(f => ({[f]: false})));\n    for (let af of activeFragments) {\n        lookup[af] = true;\n    }\n\n    return lookup;\n}\n\nexport const CistercianDigit: React.FC<CistercianDigitProps> = ({\n    digit,\n    highlight = false,\n}) => {\n    const activeFragments = digitFragments[digit];\n\n    if(activeFragments == undefined) {\n        throw new Error('A cistercian digit can only be generated for Arabic digits 1-9');\n    }\n\n    const isOn = getActiveFragmentsLookup(activeFragments);\n\n    return <g className={`cistercian-glyph ${highlight ? \"highlighted\" : \"\"}`} >\n        {isOn[1] && <line x1=\"0\" y1=\"0\" x2={100} y2=\"0\" />}\n        {isOn[2] && <line x1=\"0\" y1=\"100\" x2=\"100\" y2=\"100\" />}\n        {isOn[3] && <line x1=\"0\" y1=\"0\" x2=\"100\" y2=\"100\" />}\n        {isOn[4] && <line x1=\"0\" y1=\"100\" x2=\"100\" y2=\"0\" />}\n        {isOn[6] && <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"100\" />}\n    </g>;\n}","import * as React from 'react';\nimport { DigitPosition } from '../types';\nimport { CistercianDigit, CistercianDigitProps } from './CistercianDigit';\n\n\ninterface CistercianDigitPositionedProps extends CistercianDigitProps {\n    position: DigitPosition;\n}\n\nexport const CistercianDigitPositioned: React.FC<CistercianDigitPositionedProps> = ({\n    position,\n    ...rest\n}) => {\n\n    const scaleX = (position == 'units' || position == 'hundreds') ? 1 : -1;\n    const scaleY = (position == 'tens' || position == 'units')  ? 1 : -1;\n\n    return <svg width={100} height={100} viewBox=\"0 0 100 100\" overflow=\"visible\">\n        <g transform={`scale(${scaleX}, ${scaleY})`} transform-origin=\"center\" >\n            <CistercianDigit {...rest}/>\n        </g>\n    </svg>\n};","import * as React from 'react';\nimport { Digit, DigitPosition } from '../types';\nimport { CistercianDigitPositioned } from './CistercianDigitPositioned';\n\nimport './CistercianNumber.css';\n\ninterface CistercianNumberProps {\n    number: number;\n    highlightedPosition?: DigitPosition;\n}\n\nfunction getDigits(num: number): Digit[] {\n    if (num < 1 || num > 9999) {\n        throw new Error('A Cistercian number can only be shown for integers from 1 to 9999');\n    }\n\n    return num.toString().padStart(4, '0').split('').map(n => parseInt(n, 10)) as Digit[];\n}\n\nexport const CistercianNumber: React.FC<CistercianNumberProps> = ({\n    number,\n    highlightedPosition\n}) => {\n    const [thousands, hundreds, tens, units] = React.useMemo(() => getDigits(number), [number]);\n\n    return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"240\" height=\"340\" viewBox=\"0 0 240 340\">\n        <g className=\"cistercian-number\" transform=\"translate(20,20)\">\n            <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"300\"/>\n            <g transform=\"translate(100,0)\" >\n                <CistercianDigitPositioned digit={units} position='units' highlight={highlightedPosition === 'units'}/>\n            </g>\n            <g transform=\"translate(0,0)\" >\n                <CistercianDigitPositioned digit={tens} position='tens' highlight={highlightedPosition === 'tens'}/>\n            </g>\n            <g transform=\"translate(0, 200)\" >\n                <CistercianDigitPositioned digit={thousands} position='thousands' highlight={highlightedPosition === 'thousands'}/>\n            </g>\n            <g transform=\"translate(100, 200)\" >\n                <CistercianDigitPositioned digit={hundreds} position='hundreds' highlight={highlightedPosition === 'hundreds'}/>\n            </g>\n        </g>\n    </svg>;\n}","import * as React from 'react';\n\ninterface NumberChangeButtonProps {\n    number: number;\n    change: number;\n    minNumber: number;\n    maxNumber: number;\n    onChangeNumber: (number: number) => void;\n    onMouseOver?: (e: React.MouseEvent) => void;\n    onMouseOut?: (e: React.MouseEvent) => void;\n}\nexport const NumberChangeButton: React.FC<NumberChangeButtonProps> = ({\n    number,\n    change,\n    minNumber,\n    maxNumber,\n    onChangeNumber,\n    onMouseOver,\n    onMouseOut\n}) => {\n    const afterChange = number + change;\n    const active = afterChange >= minNumber && afterChange <= maxNumber;\n    \n    return <button\n        className=\"number-btn\"\n        disabled={!active}\n        onClick={e => onChangeNumber(afterChange)}\n        onMouseOver={onMouseOver}\n        onMouseOut={onMouseOut}\n    >\n        {(change>0 ? \"+\" : \"\") + change}\n    </button>;\n}","// adapted from https://medium.com/swlh/using-react-hooks-to-sync-your-component-state-with-the-url-query-string-81ccdfcb174f\n\nimport { useState, useEffect } from \"react\";\nimport qs from \"qs\";\nimport { useThrottleCallback } from \"@react-hook/throttle\";\n\nconst setQueryStringWithoutPageReload = (qsValue: string) => { \n    const newurl = window.location.protocol + \"//\" +\n                   window.location.host + \n                   window.location.pathname + \n                   qsValue;\n \n    window.history.replaceState({ path: newurl }, \"\", newurl);\n};\n\nconst setQueryStringValue = ( \n    key: string, \n    value: string, \n    queryString = window.location.search\n ) => { \n     const values = qs.parse(queryString, { ignoreQueryPrefix: true, parseArrays: false}); \n     const newQsValue = qs.stringify({ ...values, [key]: value }); \n     setQueryStringWithoutPageReload(`?${newQsValue}`);\n };\n\nconst getQueryStringValue = ( \n    key: string,\n    queryString = window.location.search\n) => {\n    const values = qs.parse(queryString, {\n      ignoreQueryPrefix: true,\n      parseArrays: false\n    });\n    return values[key] as string;\n};\n\nfunction useQueryString<T>(\n  key: string,\n  initialValue: T,\n  fromString: (x: string) => T,\n  toString: (x: T) => string\n) : [T, (a: T) => void] {\n  const queryValue = getQueryStringValue(key);\n  const parsedQueryValue = (queryValue ?? \"\") === \"\" ? undefined : fromString(queryValue);\n  const [value, setValue] = useState(parsedQueryValue ?? initialValue);\n  \n  const queryStringCallback = useThrottleCallback((key, value) => {\n    setQueryStringValue(key, toString(value));\n  }, 1);\n\n  useEffect(() => {\n    queryStringCallback(key, value);\n  }, [key, value, queryStringCallback]);\n\n  return [value, setValue];\n}\n\nexport default useQueryString;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { CistercianNumber } from './cistercian/CistercianNumber';\nimport { NumberChangeButton } from './NumberChangeButton';\nimport { DigitPosition } from './types';\nimport useQueryString from './useQueryString';\n\n\nfunction App() {\n  const [positionHighlight, setPositionHighlight] = useState<DigitPosition | undefined>(undefined);\n  const [number, setNumber] = useQueryString('year', (new Date()).getFullYear(), x => parseInt(x, 10), x => x.toString());\n  const [textNumber, setTextNumber] = useState(number.toString());\n\n  const trimTextNumber = () => setTextNumber(textNumber.replace(/^(0+)/, ''));\n\n  useEffect(() => {\n    if(number.toString() !== textNumber.replace(/^(0+)/, '')) {\n      setTextNumber(number.toString());\n    }\n  }, [number]);\n\n  useEffect(() => {\n    if(textNumber) {\n      setNumber(parseInt(textNumber, 10));\n    }\n  }, [textNumber]);\n\n  const btnProps = {minNumber: 1, maxNumber: 9999, onChangeNumber: setNumber};\n\n  return (\n    <div className=\"App\">\n      <h1>\n      Cistercian numbers\n      </h1>\n      \n      <section className=\"number-section cistercian\">\n        <CistercianNumber number={number} highlightedPosition={positionHighlight}/>\n      </section>\n\n      <section className=\"number-section decimal\">\n        <div>\n          <span className=\"negative-change\">\n            <NumberChangeButton number={number} change={-1000} {...btnProps} onMouseOver={e => setPositionHighlight('thousands')} onMouseOut={e => setPositionHighlight(undefined)}/>\n            <NumberChangeButton number={number} change={-100} {...btnProps} onMouseOver={e => setPositionHighlight('hundreds')} onMouseOut={e => setPositionHighlight(undefined)}/>\n            <NumberChangeButton number={number} change={-10} {...btnProps} onMouseOver={e => setPositionHighlight('tens')} onMouseOut={e => setPositionHighlight(undefined)}/>\n            <NumberChangeButton number={number} change={-1} {...btnProps} onMouseOver={e => setPositionHighlight('units')} onMouseOut={e => setPositionHighlight(undefined)}/>\n          </span>\n          <input className=\"year-text-input\"\n            type=\"text\"\n            pattern=\"[0-9]{0,4}\" maxLength={4}\n            value={textNumber}\n            onChange={e => {\n              const input = e.target.value.replace(/[^0-9]/, '');\n              setTextNumber(input);\n            }}\n            onBlur={trimTextNumber}\n            />\n          <span className=\"positive-change\">\n            <NumberChangeButton number={number} change={1} {...btnProps}  onMouseOver={e => setPositionHighlight('units')} onMouseOut={e => setPositionHighlight(undefined)}/>\n            <NumberChangeButton number={number} change={10} {...btnProps}  onMouseOver={e => setPositionHighlight('tens')} onMouseOut={e => setPositionHighlight(undefined)}/>\n            <NumberChangeButton number={number} change={100} {...btnProps}  onMouseOver={e => setPositionHighlight('hundreds')} onMouseOut={e => setPositionHighlight(undefined)}/>\n            <NumberChangeButton number={number} change={1000} {...btnProps}  onMouseOver={e => setPositionHighlight('thousands')} onMouseOut={e => setPositionHighlight(undefined)}/>\n          </span>\n        </div>\n        <div>\n          <span className=\"year-slider-label\">0</span>\n          <input\n            className=\"year-slider\"\n            type=\"range\"\n            min={1} max={9999} step={1} value={number} onChange={e => setNumber(parseInt(e.target.value))} />\n          <span className=\"year-slider-label\">9999</span>\n        </div>\n      </section>\n      <section className=\"description\">\n        <p >\n          Experiment with a medieval numbering system invented by Cistercian monks!\n        </p>\n        <p>\n          (copy the website URL to share a link to the selected character)\n        </p>\n      </section>\n      <section className=\"colophon\">\n        <p>\n          Created by <a href=\"https://mz8i.com\">mz8i</a> (<a href=\"https://github.com/mz8i/cistercian\">source</a>). \n        </p>\n        <p>\n        Inspired by <a href=\"https://twitter.com/MathematicsUCL/status/1356558846093914114/photo/1\">UCL Mathematics</a> on Twitter.\n        </p>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}